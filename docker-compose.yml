#services:
#  app:
#    build:
#      context: .
#      dockerfile: docker/Dockerfile
#    env_file:
#      - .env
#    ports:
#      - '8000:8000'
#    environment:
#      DATABASE_URL: postgres://postgres:postgres@db:5432/postgres
#      DB_HOST: db
#      DB_PORT: 5432
#    depends_on:
#      db:
#        condition: service_healthy
#    networks:
#      - app-network
#
#  db:
#    image: postgres:15-alpine
#    environment:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: postgres
#      POSTGRES_DB: postgres
#    volumes:
#      - db-data:/var/lib/postgresql/data
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready -U postgres"]
#      interval: 10s
#      timeout: 5s
#      retries: 5
#    networks:
#      - app-network
#
#volumes:
#  db-data:
#
#networks:
#  app-network:
#    driver: bridge



version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    env_file:
      - .env.prod
    ports:
      - '8000:8000'
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/postgres
      DB_HOST: db
      DB_PORT: 5432
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: '512M'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    env_file:
      - .env.prod
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '1.00'
          memory: '1G'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    image: nginx:1.21-alpine
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro          # Nginx configuration
      - ./nginx/certs:/etc/nginx/certs              # SSL certificates
      - ./nginx/logs:/var/log/nginx                # Nginx logs
    ports:
      - "80:80"    # HTTP
      - "443:443"  # HTTPS
    depends_on:
      - app
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '256M'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost/" ]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  db-data:

networks:
  app-network:
    driver: bridge
