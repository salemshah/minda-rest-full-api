name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db?schema=public

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure full Git history is fetched

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Wait for PostgreSQL to be ready
        uses: maxkomarychev/wait-action@v1.1.0
        with:
          hosts: localhost:5432
          timeout: 30  # Timeout in seconds
          check-interval: 1  # Interval between checks in seconds

      - name: Set up Prisma
        run: npx prisma generate

      - name: Run Prisma migrations
        run: npx prisma migrate deploy

      - name: Run commitlint
        run: npx commitlint --from=origin/main --to=HEAD

      - name: Run tests
        run: npm run test:ci
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}

      - name: Upload coverage report
        if: always() && success()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/
